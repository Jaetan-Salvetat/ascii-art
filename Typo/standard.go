package Typo

func GetStandard(char string) []string {
	var toReturn []string
	space := []string{
		//length 4
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
	}
	exPoint := []string{
		" _  ",
		"| | ",
		"| | ",
		"| | ",
		"|_| ",
		"(_) ",
		"    ",
		"    ",
	}
	doubleQuote := []string{
		//Length 6
		" _ _  ",
		"( | ) ",
		" v v  ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	}
	diez := []string{
		//Length 11
		"   _  _    ",
		" _| || |_  ",
		"|_  __  _| ",
		" _| || |_  ",
		"|_  __  _| ",
		"  |_||_|   ",
		"           ",
		"           ",
	}
	dollard := []string{

		"  _   ",
		" | |  ",
		"/ __) ",
		"\\__ \\ ",
		"(   / ",
		" |_|  ",
		"      ",
		"      ",
	}
	pourcentage := []string{
		//length 8
		" _   __ ",
		"(_) / / ",
		"   / /  ",
		"  / /   ",
		" / / _  ",
		"/_/ (_) ",
		"        ",
		"        ",
	}
	and := []string{
		//length 9
		"         ",
		"  ___    ",
		" ( _ )   ",
		" / _ \\/\\ ",
		"| (_>  < ",
		" \\___/\\/ ",
		"         ",
		"         ",
	}
	simpleQuote := []string{
		//length 4
		" _  ",
		"( ) ",
		"|/  ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
	}
	parentheseOuvrante := []string{
		//length 5
		"  __ ",
		" / / ",
		"| |  ",
		"| |  ",
		"| |  ",
		"| |  ",
		" \\_\\ ",
		"     ",
	}
	parentheseFermante := []string{
		//length 5
		" __  ",
		" \\ \\ ",
		"  | |",
		"  | |",
		"  | |",
		"  | |",
		" /_/ ",
		"     ",
	}
	asterisque := []string{
		//length 10
		"    _     ",
		" /\\| |/\\  ",
		" \\ ` ' /  ",
		"|_     _| ",
		" / , . \\  ",
		" \\/|_|\\/  ",
		"          ",
		"          ",
	}
	plus := []string{
		//length 8
		"        ",
		"   _    ",
		" _| |_  ",
		"|_   _| ",
		"  |_|   ",
		"        ",
		"        ",
		"        ",
	}
	virgule := []string{
		//length 4
		"    ",
		"    ",
		"    ",
		"    ",
		" _  ",
		"( ) ",
		"|/  ",
		"    ",
	}
	tiret := []string{
		//length 9
		"         ",
		"         ",
		" ______  ",
		"|______| ",
		"         ",
		"         ",
		"         ",
		"         ",
	}
	point := []string{
		//length 4
		"    ",
		"    ",
		"    ",
		"    ",
		" _  ",
		"(_) ",
		"    ",
		"    ",
	}
	slash := []string{
		//length 8
		"      __",
		"    / / ",
		"   / /  ",
		"  / /   ",
		" / /    ",
		"/_/     ",
		"        ",
		"        ",
	}
	zero := []string{
		//length 8
		"        ",
		"  ___   ",
		" / _ \\  ",
		"| | | | ",
		"| |_| | ",
		" \\___/  ",
		"        ",
		"        ",
	}
	un := []string{
		//length 4
		"    ",
		" _  ",
		"/ | ",
		"| | ",
		"| | ",
		"|_| ",
		"    ",
		"    ",
	}
	deux := []string{
		//length 8
		"        ",
		" ____   ",
		"|___ \\  ",
		"  __) | ",
		" / __/  ",
		"|_____| ",
		"        ",
		"        ",
	}
	trois := []string{
		//length 8
		"        ",
		" _____  ",
		"|___ /  ",
		"  |_ \\  ",
		" ___) | ",
		"|____/  ",
		"        ",
		"        ",
	}
	quatre := []string{
		//length 9
		"         ",
		" _  _    ",
		"| || |   ",
		"| || |_  ",
		"|__   _| ",
		"   |_|   ",
		"         ",
		"         ",
	}
	cinq := []string{
		//length 8
		"        ",
		" ____   ",
		"| ___|  ",
		"|___ \\  ",
		"  __) | ",
		"|____/  ",
		"        ",
		"        ",
	}
	six := []string{

		"        ",
		"  __    ",
		" / /    ",
		"| '_ \\  ",
		"| (_) | ",
		" \\___/  ",
		"        ",
		"        ",
	}
	sept := []string{

		"        ",
		" _____  ",
		"|___  | ",
		"   / /  ",
		"  / /   ",
		" /_/    ",
		"        ",
		"        ",
	}
	huit := []string{

		"        ",
		"  ___   ",
		" ( _ )  ",
		" / _ \\  ",
		"| (_) | ",
		" \\___/  ",
		"        ",
		"        ",
	}
	neuf := []string{

		"        ",
		"  ___   ",
		" / _ \\  ",
		"| (_) | ",
		" \\__, | ",
		"   / /  ",
		"  /_/   ",
		"        ",
	}
	deuxPoints := []string{

		"    ",
		" _  ",
		"(_) ",
		"    ",
		" _  ",
		"(_) ",
		"    ",
		"    ",
	}
	pointVirgule := []string{

		"    ",
		" _  ",
		"(_) ",
		"    ",
		" _  ",
		"( ) ",
		"|/  ",
		"    ",
	}
	plusPetit := []string{

		"   __ ",
		"  / / ",
		" / /  ",
		"< <   ",
		" \\ \\  ",
		"  \\_\\ ",
		"      ",
		"      ",
	}
	egal := []string{

		"         ",
		" ______  ",
		"|______| ",
		" ______  ",
		"|______| ",
		"         ",
		"         ",
		"         ",
	}
	plusGrand := []string{

		"__    ",
		"\\ \\   ",
		" \\ \\  ",
		"  > > ",
		" / /  ",
		"/_/   ",
		"      ",
		"      ",
	}
	pointInterrogation := []string{

		" ___   ",
		"|__ \\  ",
		"   ) | ",
		"  / /  ",
		" |_|   ",
		" (_)   ",
		"       ",
		"       ",
	}
	arobase := []string{

		"          ",
		"   ____   ",
		"  / __ \\  ",
		" / / _` | ",
		"| | (_| | ",
		" \\ \\__,_| ",
		"  \\____/  ",
		"          ",
	}
	A := []string{

		"           ",
		"    /\\     ",
		"   /  \\    ",
		"  / /\\ \\   ",
		" / ____ \\  ",
		"/_/    \\_\\ ",
		"           ",
		"           ",
	}
	B := []string{

		" ____   ",
		"|  _ \\  ",
		"| |_) | ",
		"|  _ <  ",
		"| |_) | ",
		"|____/  ",
		"        ",
		"        ",
	}
	C := []string{

		"  _____  ",
		" / ____| ",
		"| |      ",
		"| |      ",
		"| |____  ",
		" \\_____| ",
		"         ",
		"         ",
	}
	D := []string{

		" _____   ",
		"|  __ \\  ",
		"| |  | | ",
		"| |  | | ",
		"| |__| | ",
		"|_____/  ",
		"         ",
		"         ",
	}
	E := []string{

		" ______  ",
		"|  ____| ",
		"| |__    ",
		"|  __|   ",
		"| |____  ",
		"|______| ",
		"         ",
		"         ",
	}
	F := []string{

		" ______  ",
		"|  ____| ",
		"| |__    ",
		"|  __|   ",
		"| |      ",
		"|_|      ",
		"         ",
		"         ",
	}
	G := []string{

		"  _____  ",
		" / ____| ",
		"| |  __  ",
		"| | |_ | ",
		"| |__| | ",
		" \\_____| ",
		"         ",
		"         ",
	}
	H := []string{

		" _    _  ",
		"| |  | | ",
		"| |__| | ",
		"|  __  | ",
		"| |  | | ",
		"|_|  |_| ",
		"         ",
		"         ",
	}
	I := []string{

		" _____  ",
		"|_   _| ",
		"  | |   ",
		"  | |   ",
		" _| |_  ",
		"|_____| ",
		"        ",
		"        ",
	}
	J := []string{

		"      _  ",
		"     | | ",
		"     | | ",
		" _   | | ",
		"| |__| | ",
		" \\____/  ",
		"         ",
		"         ",
	}
	K := []string{

		" _  __ ",
		"| |/ / ",
		"| ' /  ",
		"|  <   ",
		"| . \\  ",
		"|_|\\_\\ ",
		"       ",
		"       ",
	}
	L := []string{

		" _       ",
		"| |      ",
		"| |      ",
		"| |      ",
		"| |____  ",
		"|______| ",
		"         ",
		"         ",
	}
	M := []string{

		" __  __  ",
		"|  \\/  | ",
		"| \\  / | ",
		"| |\\/| | ",
		"| |  | | ",
		"|_|  |_| ",
		"         ",
		"         ",
	}
	N := []string{

		" _   _  ",
		"| \\ | | ",
		"|  \\| | ",
		"| . ` | ",
		"| |\\  | ",
		"|_| \\_| ",
		"        ",
		"        ",
	}
	O := []string{

		"  ____   ",
		" / __ \\  ",
		"| |  | | ",
		"| |  | | ",
		"| |__| | ",
		" \\____/  ",
		"         ",
		"         ",
	}
	P := []string{

		" _____   ",
		"|  __ \\  ",
		"| |__) | ",
		"|  ___/  ",
		"| |      ",
		"|_|      ",
		"         ",
		"         ",
	}
	Q := []string{

		"  ____   ",
		" / __ \\  ",
		"| |  | | ",
		"| |  | | ",
		"| |__| | ",
		" \\___\\_\\ ",
		"         ",
		"         ",
	}
	R := []string{

		" _____   ",
		"|  __ \\  ",
		"| |__) | ",
		"|  _  /  ",
		"| | \\ \\  ",
		"|_|  \\_\\ ",
		"         ",
		"         ",
	}
	S := []string{

		"  _____  ",
		" / ____| ",
		"| (___   ",
		" \\___ \\  ",
		" ____) | ",
		"|_____/  ",
		"         ",
		"         ",
	}
	T := []string{

		" _______  ",
		"|__   __| ",
		"   | |    ",
		"   | |    ",
		"   | |    ",
		"   |_|    ",
		"          ",
		"          ",
	}
	U := []string{

		" _    _  ",
		"| |  | | ",
		"| |  | | ",
		"| |  | | ",
		"| |__| | ",
		" \\____/  ",
		"         ",
		"         ",
	}
	V := []string{

		"__      __ ",
		"\\ \\    / / ",
		" \\ \\  / /  ",
		"  \\ \\/ /   ",
		"   \\  /    ",
		"    \\/     ",
		"           ",
		"           ",
	}
	W := []string{

		"__          __ ",
		"\\ \\        / / ",
		" \\ \\  /\\  / /  ",
		"  \\ \\/  \\/ /   ",
		"   \\  /\\  /    ",
		"    \\/  \\/     ",
		"               ",
		"               ",
	}
	X := []string{

		"__   __ ",
		"\\ \\ / / ",
		" \\ V /  ",
		"  > <   ",
		" / . \\  ",
		"/_/ \\_\\ ",
		"        ",
		"        ",
	}
	Y := []string{

		"__     __ ",
		"\\ \\   / / ",
		" \\ \\_/ /  ",
		"  \\   /   ",
		"   | |    ",
		"   |_|    ",
		"          ",
		"          ",
	}
	Z := []string{

		" ______ ",
		"|___  / ",
		"   / /  ",
		"  / /   ",
		" / /__  ",
		"/_____| ",
		"        ",
		"        ",
	}
	crochetOuvrant := []string{

		" ___  ",
		"|  _| ",
		"| |   ",
		"| |   ",
		"| |   ",
		"| |_  ",
		"|___| ",
		"      ",
	}
	antiSlash := []string{

		"__      ",
		"\\ \\     ",
		" \\ \\    ",
		"  \\ \\   ",
		"   \\ \\  ",
		"    \\_\\ ",
		"        ",
		"        ",
	}
	crochetFermant := []string{

		" ___  ",
		"|_  | ",
		"  | | ",
		"  | | ",
		"  | | ",
		" _| | ",
		"|___| ",
		"      ",
	}
	accentCirconflexe := []string{

		" /\\  ",
		"|/\\| ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
	}
	tiretDu8 := []string{

		"         ",
		"         ",
		"         ",
		"         ",
		"         ",
		"         ",
		" ______  ",
		"|______| ",
	}
	accentGrave := []string{

		" _  ",
		"( ) ",
		" \\| ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
	}
	a := []string{

		"        ",
		"        ",
		"  __ _  ",
		" / _` | ",
		"| (_| | ",
		" \\__,_| ",
		"        ",
		"        ",
	}
	b := []string{

		" _      ",
		"| |     ",
		"| |__   ",
		"| '_ \\  ",
		"| |_) | ",
		"|_.__/  ",
		"        ",
		"        ",
	}
	c := []string{

		"       ",
		"       ",
		"  ___  ",
		" / __| ",
		"| (__  ",
		" \\___| ",
		"       ",
		"       ",
	}
	d := []string{

		"     _  ",
		"    | | ",
		"  __| | ",
		" / _` | ",
		"| (_| | ",
		" \\__,_| ",
		"        ",
		"        ",
	}
	e := []string{

		"       ",
		"       ",
		"  ___  ",
		" / _ \\ ",
		"|  __/ ",
		" \\___| ",
		"       ",
		"       ",
	}
	f := []string{

		"  __  ",
		" / _| ",
		"| |_  ",
		"|  _| ",
		"| |   ",
		"|_|   ",
		"      ",
		"      ",
	}
	g := []string{

		"        ",
		"  __ _  ",
		" / _` | ",
		"| (_| | ",
		" \\__, | ",
		"  __/ | ",
		" |___/  ",
		"        ",
	}
	h := []string{

		" _      ",
		"| |     ",
		"| |__   ",
		"|  _ \\  ",
		"| | | | ",
		"|_| |_| ",
		"        ",
		"        ",
	}
	i := []string{

		" _  ",
		"(_) ",
		" _  ",
		"| | ",
		"| | ",
		"|_| ",
		"    ",
		"    ",
	}
	j := []string{

		"   _  ",
		"  (_) ",
		"   _  ",
		"  | | ",
		"  | | ",
		"  | | ",
		" _/ | ",
		"|__/  ",
	}
	k := []string{

		"       ",
		" _     ",
		"| | _  ",
		"| |/ / ",
		"|   <  ",
		"|_|\\_\\ ",
		"       ",
		"       ",
	}
	l := []string{

		" _  ",
		"| | ",
		"| | ",
		"| | ",
		"| | ",
		"|_| ",
		"    ",
		"    ",
	}
	m := []string{

		"            ",
		"            ",
		" _ __ ___   ",
		"| '_ ` _ \\  ",
		"| | | | | | ",
		"|_| |_| |_| ",
		"            ",
		"            ",
	}
	n := []string{

		"        ",
		"        ",
		" _ __   ",
		"| '_ \\  ",
		"| | | | ",
		"|_| |_| ",
		"        ",
		"        ",
	}
	o := []string{

		"        ",
		"        ",
		"  ___   ",
		" / _ \\  ",
		"| (_) | ",
		" \\___/  ",
		"        ",
		"        ",
	}
	p := []string{

		"        ",
		"        ",
		" _ __   ",
		"| '_ \\  ",
		"| |_) | ",
		"| .__/  ",
		"| |     ",
		"|_|     ",
	}
	q := []string{

		"        ",
		"        ",
		"  __ _  ",
		" / _` | ",
		"| (_| | ",
		" \\__, | ",
		"    | | ",
		"    |_| ",
	}
	r := []string{

		"       ",
		"       ",
		" _ __  ",
		"| '__| ",
		"| |    ",
		"|_|    ",
		"       ",
		"       ",
	}
	s := []string{

		"      ",
		"      ",
		" ___  ",
		"/ __| ",
		"\\__ \\ ",
		"|___/ ",
		"      ",
		"      ",
	}
	t := []string{

		" _    ",
		"| |   ",
		"| |_  ",
		"| __| ",
		"\\ |_  ",
		" \\__| ",
		"      ",
		"      ",
	}
	u := []string{

		"        ",
		"        ",
		" _   _  ",
		"| | | | ",
		"| |_| | ",
		" \\__,_| ",
		"        ",
		"        ",
	}
	v := []string{

		"        ",
		"        ",
		"__   __ ",
		"\\ \\ / / ",
		" \\ V /  ",
		"  \\_/   ",
		"        ",
		"        ",
	}
	w := []string{

		"           ",
		"           ",
		"__      __ ",
		"\\ \\ /\\ / / ",
		" \\ V  V /  ",
		"  \\_/\\_/   ",
		"           ",
		"           ",
	}
	x := []string{

		"       ",
		"       ",
		"__  __ ",
		"\\ \\/ / ",
		" >  <  ",
		"/_/\\_\\ ",
		"       ",
		"       ",
	}
	y := []string{

		"        ",
		"        ",
		" _   _  ",
		"| | | | ",
		"| |_| | ",
		" \\__, | ",
		" __/ /  ",
		"|___/   ",
	}
	z := []string{

		"      ",
		"      ",
		" ____ ",
		"|_  / ",
		" / /  ",
		"/___| ",
		"      ",
		"      ",
	}
	accolladeOuvrante := []string{

		"   __ ",
		"  / / ",
		" | |  ",
		"/ /   ",
		"\\ \\   ",
		" | |  ",
		"  \\_\\ ",
		"      ",
	}
	slashDroit := []string{

		" _  ",
		"| | ",
		"| | ",
		"| | ",
		"| | ",
		"| | ",
		"| | ",
		"|_| ",
	}
	accolladeFermante := []string{

		"__    ",
		"\\ \\   ",
		" | |  ",
		"  \\ \\ ",
		"  / / ",
		" | |  ",
		"/_/   ",
		"      ",
	}
	tilde := []string{

		" /\\/| ",
		"|/\\/  ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	}

	switch char {
	case " ":
		toReturn = space
	case "!":
		toReturn = exPoint
	case "\"":
		toReturn = doubleQuote
	case "#":
		toReturn = diez
	case "$":
		toReturn = dollard
	case "%":
		toReturn = pourcentage
	case "&":
		toReturn = and
	case "'":
		toReturn = simpleQuote
	case "(":
		toReturn = parentheseOuvrante
	case ")":
		toReturn = parentheseFermante
	case "*":
		toReturn = asterisque
	case "+":
		toReturn = plus
	case ",":
		toReturn = virgule
	case "-":
		toReturn = tiret
	case ".":
		toReturn = point
	case "/":
		toReturn = slash
	case "0":
		toReturn = zero
	case "1":
		toReturn = un
	case "2":
		toReturn = deux
	case "3":
		toReturn = trois
	case "4":
		toReturn = quatre
	case "5":
		toReturn = cinq
	case "6":
		toReturn = six
	case "7":
		toReturn = sept
	case "8":
		toReturn = huit
	case "9":
		toReturn = neuf
	case ":":
		toReturn = deuxPoints
	case ";":
		toReturn = pointVirgule
	case "<":
		toReturn = plusPetit
	case "=":
		toReturn = egal
	case ">":
		toReturn = plusGrand
	case "?":
		toReturn = pointInterrogation
	case "@":
		toReturn = arobase
	case "A":
		toReturn = A
	case "B":
		toReturn = B
	case "C":
		toReturn = C
	case "D":
		toReturn = D
	case "E":
		toReturn = E
	case "F":
		toReturn = F
	case "G":
		toReturn = G
	case "H":
		toReturn = H
	case "I":
		toReturn = I
	case "J":
		toReturn = J
	case "K":
		toReturn = K
	case "L":
		toReturn = L
	case "M":
		toReturn = M
	case "N":
		toReturn = N
	case "O":
		toReturn = O
	case "P":
		toReturn = P
	case "Q":
		toReturn = Q
	case "R":
		toReturn = R
	case "S":
		toReturn = S
	case "T":
		toReturn = T
	case "U":
		toReturn = U
	case "V":
		toReturn = V
	case "W":
		toReturn = W
	case "X":
		toReturn = X
	case "Y":
		toReturn = Y
	case "Z":
		toReturn = Z
	case "[":
		toReturn = crochetOuvrant
	case "\\":
		toReturn = antiSlash
	case "]":
		toReturn = crochetFermant
	case "^":
		toReturn = accentCirconflexe
	case "_":
		toReturn = tiretDu8
	case "`":
		toReturn = accentGrave
	case "a":
		toReturn = a
	case "b":
		toReturn = b
	case "c":
		toReturn = c
	case "d":
		toReturn = d
	case "e":
		toReturn = e
	case "f":
		toReturn = f
	case "g":
		toReturn = g
	case "h":
		toReturn = h
	case "i":
		toReturn = i
	case "j":
		toReturn = j
	case "k":
		toReturn = k
	case "l":
		toReturn = l
	case "m":
		toReturn = m
	case "n":
		toReturn = n
	case "o":
		toReturn = o
	case "p":
		toReturn = p
	case "q":
		toReturn = q
	case "r":
		toReturn = r
	case "s":
		toReturn = s
	case "t":
		toReturn = t
	case "u":
		toReturn = u
	case "v":
		toReturn = v
	case "w":
		toReturn = w
	case "x":
		toReturn = x
	case "y":
		toReturn = y
	case "z":
		toReturn = z
	case "{":
		toReturn = accolladeOuvrante
	case "|":
		toReturn = slashDroit
	case "}":
		toReturn = accolladeFermante
	case "~":
		toReturn = tilde
	default:
		toReturn = space
	}

	return toReturn
}

func IsStandard(toFind []string) string {
	var toReturn string = ""
	chars := [][]string{
		{

			"    ",
			"    ",
			"    ",
			"    ",
			"    ",
			"    ",
			"    ",
			"    ",
		},
		{

			" _  ",
			"| | ",
			"| | ",
			"| | ",
			"|_| ",
			"(_) ",
			"    ",
			"    ",
		},
		{

			" _ _  ",
			"( | ) ",
			" v v  ",
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
		},
		{

			"   _  _    ",
			" _| || |_  ",
			"|_  __  _| ",
			" _| || |_  ",
			"|_  __  _| ",
			"  |_||_|   ",
			"           ",
			"           ",
		},
		{

			"  _   ",
			" | |  ",
			"/ __) ",
			"\\__ \\ ",
			"(   / ",
			" |_|  ",
			"      ",
			"      ",
		},
		{

			" _   __ ",
			"(_) / / ",
			"   / /  ",
			"  / /   ",
			" / / _  ",
			"/_/ (_) ",
			"        ",
			"        ",
		},
		{

			"         ",
			"  ___    ",
			" ( _ )   ",
			" / _ \\/\\ ",
			"| (_>  < ",
			" \\___/\\/ ",
			"         ",
			"         ",
		},
		{

			" _  ",
			"( ) ",
			"|/  ",
			"    ",
			"    ",
			"    ",
			"    ",
			"    ",
		},
		{

			"  __ ",
			" / / ",
			"| |  ",
			"| |  ",
			"| |  ",
			"| |  ",
			" \\_\\ ",
			"     ",
		},
		{

			" __  ",
			" \\ \\ ",
			"  | |",
			"  | |",
			"  | |",
			"  | |",
			" /_/ ",
			"     ",
		},
		{

			"    _     ",
			" /\\| |/\\  ",
			" \\ ` ' /  ",
			"|_     _| ",
			" / , . \\  ",
			" \\/|_|\\/  ",
			"          ",
			"          ",
		},
		{

			"        ",
			"   _    ",
			" _| |_  ",
			"|_   _| ",
			"  |_|   ",
			"        ",
			"        ",
			"        ",
		},
		{

			"    ",
			"    ",
			"    ",
			"    ",
			" _  ",
			"( ) ",
			"|/  ",
			"    ",
		},
		{

			"         ",
			"         ",
			" ______  ",
			"|______| ",
			"         ",
			"         ",
			"         ",
			"         ",
		},
		{

			"    ",
			"    ",
			"    ",
			"    ",
			" _  ",
			"(_) ",
			"    ",
			"    ",
		},
		{

			"      __",
			"    / / ",
			"   / /  ",
			"  / /   ",
			" / /    ",
			"/_/     ",
			"        ",
			"        ",
		},
		{

			"        ",
			"  ___   ",
			" / _ \\  ",
			"| | | | ",
			"| |_| | ",
			" \\___/  ",
			"        ",
			"        ",
		},
		{

			"    ",
			" _  ",
			"/ | ",
			"| | ",
			"| | ",
			"|_| ",
			"    ",
			"    ",
		},
		{

			"        ",
			" ____   ",
			"|___ \\  ",
			"  __) | ",
			" / __/  ",
			"|_____| ",
			"        ",
			"        ",
		},
		{

			"        ",
			" _____  ",
			"|___ /  ",
			"  |_ \\  ",
			" ___) | ",
			"|____/  ",
			"        ",
			"        ",
		},
		{

			"         ",
			" _  _    ",
			"| || |   ",
			"| || |_  ",
			"|__   _| ",
			"   |_|   ",
			"         ",
			"         ",
		},
		{

			"        ",
			" ____   ",
			"| ___|  ",
			"|___ \\  ",
			"  __) | ",
			"|____/  ",
			"        ",
			"        ",
		},
		{

			"        ",
			"  __    ",
			" / /    ",
			"| '_ \\  ",
			"| (_) | ",
			" \\___/  ",
			"        ",
			"        ",
		},
		{

			"        ",
			" _____  ",
			"|___  | ",
			"   / /  ",
			"  / /   ",
			" /_/    ",
			"        ",
			"        ",
		},
		{

			"        ",
			"  ___   ",
			" ( _ )  ",
			" / _ \\  ",
			"| (_) | ",
			" \\___/  ",
			"        ",
			"        ",
		},
		{

			"        ",
			"  ___   ",
			" / _ \\  ",
			"| (_) | ",
			" \\__, | ",
			"   / /  ",
			"  /_/   ",
			"        ",
		},
		{

			"    ",
			" _  ",
			"(_) ",
			"    ",
			" _  ",
			"(_) ",
			"    ",
			"    ",
		},
		{

			"    ",
			" _  ",
			"(_) ",
			"    ",
			" _  ",
			"( ) ",
			"|/  ",
			"    ",
		},
		{

			"   __ ",
			"  / / ",
			" / /  ",
			"< <   ",
			" \\ \\  ",
			"  \\_\\ ",
			"      ",
			"      ",
		},
		{

			"         ",
			" ______  ",
			"|______| ",
			" ______  ",
			"|______| ",
			"         ",
			"         ",
			"         ",
		},
		{

			"__    ",
			"\\ \\   ",
			" \\ \\  ",
			"  > > ",
			" / /  ",
			"/_/   ",
			"      ",
			"      ",
		},
		{

			" ___   ",
			"|__ \\  ",
			"   ) | ",
			"  / /  ",
			" |_|   ",
			" (_)   ",
			"       ",
			"       ",
		},
		{

			"          ",
			"   ____   ",
			"  / __ \\  ",
			" / / _` | ",
			"| | (_| | ",
			" \\ \\__,_| ",
			"  \\____/  ",
			"          ",
		},
		{

			"           ",
			"    /\\     ",
			"   /  \\    ",
			"  / /\\ \\   ",
			" / ____ \\  ",
			"/_/    \\_\\ ",
			"           ",
			"           ",
		},
		{

			" ____   ",
			"|  _ \\  ",
			"| |_) | ",
			"|  _ <  ",
			"| |_) | ",
			"|____/  ",
			"        ",
			"        ",
		},
		{

			"  _____  ",
			" / ____| ",
			"| |      ",
			"| |      ",
			"| |____  ",
			" \\_____| ",
			"         ",
			"         ",
		},
		{

			" _____   ",
			"|  __ \\  ",
			"| |  | | ",
			"| |  | | ",
			"| |__| | ",
			"|_____/  ",
			"         ",
			"         ",
		},
		{

			" ______  ",
			"|  ____| ",
			"| |__    ",
			"|  __|   ",
			"| |____  ",
			"|______| ",
			"         ",
			"         ",
		},
		{

			" ______  ",
			"|  ____| ",
			"| |__    ",
			"|  __|   ",
			"| |      ",
			"|_|      ",
			"         ",
			"         ",
		},
		{

			"  _____  ",
			" / ____| ",
			"| |  __  ",
			"| | |_ | ",
			"| |__| | ",
			" \\_____| ",
			"         ",
			"         ",
		},
		{

			" _    _  ",
			"| |  | | ",
			"| |__| | ",
			"|  __  | ",
			"| |  | | ",
			"|_|  |_| ",
			"         ",
			"         ",
		},
		{

			" _____  ",
			"|_   _| ",
			"  | |   ",
			"  | |   ",
			" _| |_  ",
			"|_____| ",
			"        ",
			"        ",
		},
		{

			"      _  ",
			"     | | ",
			"     | | ",
			" _   | | ",
			"| |__| | ",
			" \\____/  ",
			"         ",
			"         ",
		},
		{

			" _  __ ",
			"| |/ / ",
			"| ' /  ",
			"|  <   ",
			"| . \\  ",
			"|_|\\_\\ ",
			"       ",
			"       ",
		},
		{

			" _       ",
			"| |      ",
			"| |      ",
			"| |      ",
			"| |____  ",
			"|______| ",
			"         ",
			"         ",
		},
		{

			" __  __  ",
			"|  \\/  | ",
			"| \\  / | ",
			"| |\\/| | ",
			"| |  | | ",
			"|_|  |_| ",
			"         ",
			"         ",
		},
		{

			" _   _  ",
			"| \\ | | ",
			"|  \\| | ",
			"| . ` | ",
			"| |\\  | ",
			"|_| \\_| ",
			"        ",
			"        ",
		},
		{

			"  ____   ",
			" / __ \\  ",
			"| |  | | ",
			"| |  | | ",
			"| |__| | ",
			" \\____/  ",
			"         ",
			"         ",
		},
		{

			" _____   ",
			"|  __ \\  ",
			"| |__) | ",
			"|  ___/  ",
			"| |      ",
			"|_|      ",
			"         ",
			"         ",
		},
		{

			"  ____   ",
			" / __ \\  ",
			"| |  | | ",
			"| |  | | ",
			"| |__| | ",
			" \\___\\_\\ ",
			"         ",
			"         ",
		},
		{

			" _____   ",
			"|  __ \\  ",
			"| |__) | ",
			"|  _  /  ",
			"| | \\ \\  ",
			"|_|  \\_\\ ",
			"         ",
			"         ",
		},
		{

			"  _____  ",
			" / ____| ",
			"| (___   ",
			" \\___ \\  ",
			" ____) | ",
			"|_____/  ",
			"         ",
			"         ",
		},
		{

			" _______  ",
			"|__   __| ",
			"   | |    ",
			"   | |    ",
			"   | |    ",
			"   |_|    ",
			"          ",
			"          ",
		},
		{

			" _    _  ",
			"| |  | | ",
			"| |  | | ",
			"| |  | | ",
			"| |__| | ",
			" \\____/  ",
			"         ",
			"         ",
		},
		{

			"__      __ ",
			"\\ \\    / / ",
			" \\ \\  / /  ",
			"  \\ \\/ /   ",
			"   \\  /    ",
			"    \\/     ",
			"           ",
			"           ",
		},
		{

			"__          __ ",
			"\\ \\        / / ",
			" \\ \\  /\\  / /  ",
			"  \\ \\/  \\/ /   ",
			"   \\  /\\  /    ",
			"    \\/  \\/     ",
			"               ",
			"               ",
		},
		{

			"__   __ ",
			"\\ \\ / / ",
			" \\ V /  ",
			"  > <   ",
			" / . \\  ",
			"/_/ \\_\\ ",
			"        ",
			"        ",
		},
		{

			"__     __ ",
			"\\ \\   / / ",
			" \\ \\_/ /  ",
			"  \\   /   ",
			"   | |    ",
			"   |_|    ",
			"          ",
			"          ",
		},
		{

			" ______ ",
			"|___  / ",
			"   / /  ",
			"  / /   ",
			" / /__  ",
			"/_____| ",
			"        ",
			"        ",
		},
		{

			" ___  ",
			"|  _| ",
			"| |   ",
			"| |   ",
			"| |   ",
			"| |_  ",
			"|___| ",
			"      ",
		},
		{

			"__      ",
			"\\ \\     ",
			" \\ \\    ",
			"  \\ \\   ",
			"   \\ \\  ",
			"    \\_\\ ",
			"        ",
			"        ",
		},
		{

			" ___  ",
			"|_  | ",
			"  | | ",
			"  | | ",
			"  | | ",
			" _| | ",
			"|___| ",
			"      ",
		},
		{

			" /\\  ",
			"|/\\| ",
			"     ",
			"     ",
			"     ",
			"     ",
			"     ",
			"     ",
		},
		{

			"         ",
			"         ",
			"         ",
			"         ",
			"         ",
			"         ",
			" ______  ",
			"|______| ",
		},
		{

			" _  ",
			"( ) ",
			" \\| ",
			"    ",
			"    ",
			"    ",
			"    ",
			"    ",
		},
		{

			"        ",
			"        ",
			"  __ _  ",
			" / _` | ",
			"| (_| | ",
			" \\__,_| ",
			"        ",
			"        ",
		},
		{

			" _      ",
			"| |     ",
			"| |__   ",
			"| '_ \\  ",
			"| |_) | ",
			"|_.__/  ",
			"        ",
			"        ",
		},
		{

			"       ",
			"       ",
			"  ___  ",
			" / __| ",
			"| (__  ",
			" \\___| ",
			"       ",
			"       ",
		},
		{

			"     _  ",
			"    | | ",
			"  __| | ",
			" / _` | ",
			"| (_| | ",
			" \\__,_| ",
			"        ",
			"        ",
		},
		{

			"       ",
			"       ",
			"  ___  ",
			" / _ \\ ",
			"|  __/ ",
			" \\___| ",
			"       ",
			"       ",
		},
		{

			"  __  ",
			" / _| ",
			"| |_  ",
			"|  _| ",
			"| |   ",
			"|_|   ",
			"      ",
			"      ",
		},
		{

			"        ",
			"  __ _  ",
			" / _` | ",
			"| (_| | ",
			" \\__, | ",
			"  __/ | ",
			" |___/  ",
			"        ",
		},
		{

			" _      ",
			"| |     ",
			"| |__   ",
			"|  _ \\  ",
			"| | | | ",
			"|_| |_| ",
			"        ",
			"        ",
		},
		{

			" _  ",
			"(_) ",
			" _  ",
			"| | ",
			"| | ",
			"|_| ",
			"    ",
			"    ",
		},
		{

			"   _  ",
			"  (_) ",
			"   _  ",
			"  | | ",
			"  | | ",
			"  | | ",
			" _/ | ",
			"|__/  ",
		},
		{

			"       ",
			" _     ",
			"| | _  ",
			"| |/ / ",
			"|   <  ",
			"|_|\\_\\ ",
			"       ",
			"       ",
		},
		{

			" _  ",
			"| | ",
			"| | ",
			"| | ",
			"| | ",
			"|_| ",
			"    ",
			"    ",
		},
		{

			"            ",
			"            ",
			" _ __ ___   ",
			"| '_ ` _ \\  ",
			"| | | | | | ",
			"|_| |_| |_| ",
			"            ",
			"            ",
		},
		{

			"        ",
			"        ",
			" _ __   ",
			"| '_ \\  ",
			"| | | | ",
			"|_| |_| ",
			"        ",
			"        ",
		},
		{

			"        ",
			"        ",
			"  ___   ",
			" / _ \\  ",
			"| (_) | ",
			" \\___/  ",
			"        ",
			"        ",
		},
		{

			"        ",
			"        ",
			" _ __   ",
			"| '_ \\  ",
			"| |_) | ",
			"| .__/  ",
			"| |     ",
			"|_|     ",
		},
		{

			"        ",
			"        ",
			"  __ _  ",
			" / _` | ",
			"| (_| | ",
			" \\__, | ",
			"    | | ",
			"    |_| ",
		},
		{

			"       ",
			"       ",
			" _ __  ",
			"| '__| ",
			"| |    ",
			"|_|    ",
			"       ",
			"       ",
		},
		{

			"      ",
			"      ",
			" ___  ",
			"/ __| ",
			"\\__ \\ ",
			"|___/ ",
			"      ",
			"      ",
		},
		{

			" _    ",
			"| |   ",
			"| |_  ",
			"| __| ",
			"\\ |_  ",
			" \\__| ",
			"      ",
			"      ",
		},
		{

			"        ",
			"        ",
			" _   _  ",
			"| | | | ",
			"| |_| | ",
			" \\__,_| ",
			"        ",
			"        ",
		},
		{

			"        ",
			"        ",
			"__   __ ",
			"\\ \\ / / ",
			" \\ V /  ",
			"  \\_/   ",
			"        ",
			"        ",
		},
		{

			"           ",
			"           ",
			"__      __ ",
			"\\ \\ /\\ / / ",
			" \\ V  V /  ",
			"  \\_/\\_/   ",
			"           ",
			"           ",
		},
		{

			"       ",
			"       ",
			"__  __ ",
			"\\ \\/ / ",
			" >  <  ",
			"/_/\\_\\ ",
			"       ",
			"       ",
		},
		{

			"        ",
			"        ",
			" _   _  ",
			"| | | | ",
			"| |_| | ",
			" \\__, | ",
			" __/ /  ",
			"|___/   ",
		},
		{

			"      ",
			"      ",
			" ____ ",
			"|_  / ",
			" / /  ",
			"/___| ",
			"      ",
			"      ",
		},
		{

			"   __ ",
			"  / / ",
			" | |  ",
			"/ /   ",
			"\\ \\   ",
			" | |  ",
			"  \\_\\ ",
			"      ",
		},
		{

			" _  ",
			"| | ",
			"| | ",
			"| | ",
			"| | ",
			"| | ",
			"| | ",
			"|_| ",
		},
		{

			"__    ",
			"\\ \\   ",
			" | |  ",
			"  \\ \\ ",
			"  / / ",
			" | |  ",
			"/_/   ",
			"      ",
		},
		{

			" /\\/| ",
			"|/\\/  ",
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
		},
	}

	for i := range chars {
		found := true
		for j := range chars[i] {
			if chars[i][j] != toFind[j] {
				found = false
			}
		}
		if found {
			toReturn = string(rune(i + 32))
		} else {
			continue
		}
	}
	return toReturn
}
